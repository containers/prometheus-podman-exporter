name: validate pull requests
on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  vendoring:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.20'
      - uses: actions/checkout@v3
      - run: |
          go mod tidy
          go mod vendor
          go mod verify
          bash ./hack/tree_status.sh

  golangci-lint_fmt:
    runs-on: ubuntu-latest
    container:
      image: fedora:latest
    steps:
      - uses: actions/setup-go@v3
        with:
          # cannot use 1.21.X latest version since golangci-lint has an issue.
          go-version: '1.21.4'
      - uses: actions/checkout@v3
      - run: |
          bash hack/install_dep.sh
          make .install.golangci-lint
          make lint
          make gofmt

  unit_test:
    runs-on: ubuntu-latest
    container:
      image: quay.io/containers/podman:v4
      volumes:
        - container_volume:/var/lib/containers
      options: "--device /dev/fuse:rw --security-opt label=disable --security-opt seccomp=unconfined --privileged"
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: '1.21.4'
      - uses: actions/checkout@v3
      - run: |
          yum -y install make gcc glib2-devel glibc-devel glibc-static device-mapper-devel
          export GOBIN=$(pwd)/bin/
          export CGO_ENABLED=1
          make .install.ginkgo
          make test-unit

  e2e_test:
    runs-on: ubuntu-latest
    container:
      image: quay.io/containers/podman:v4
      volumes:
        - container_volume:/var/lib/containers
      options: "--device /dev/fuse:rw --security-opt label=disable --security-opt seccomp=unconfined --privileged"
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: '1.21.4'
      - uses: actions/checkout@v3
      - uses: JarvusInnovations/background-action@v1
        with:
          run: |
            bash hack/install_dep.sh
            make binary
            ./bin/prometheus-podman-exporter --collector.enable-all --collector.store_labels
          wait-on: |
            http://localhost:9882/

      - run: |
          yum -y install jq
          make .install.bats
          make test-e2e

  build_binary:
    runs-on: ubuntu-latest
    container:
      image: fedora:latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.20'
      - uses: actions/checkout@v3
      - run: |
          bash hack/install_dep.sh
          make binary
